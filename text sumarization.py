{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Text summarization of Amazon reviews"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1) Import libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/dsuser/anaconda2/lib/python2.7/site-packages/h5py/__init__.py:34: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n",
      "  from ._conv import register_converters as _register_converters\n"
     ]
    }
   ],
   "source": [
    "import nltk as nt\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import tensorflow as tf\n",
    "import string\n",
    "import os\n",
    "import re\n",
    "import sys\n",
    "import requests\n",
    "import io\n",
    "from collections import Counter\n",
    "from tensorflow.python.layers.core import Dense\n",
    "import random\n",
    "from nltk.corpus import stopwords\n",
    "import time\n",
    "from tensorflow.python.ops.rnn_cell_impl import _zero_state_tensors\n",
    "from __future__ import absolute_import\n",
    "from __future__ import division\n",
    "from __future__ import print_function\n",
    "import argparse\n",
    "import seq2seq\n",
    "import seq2seq_model\n",
    "import data_utils\n",
    "import translate\n",
    "sess = tf.Session()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2)  setting learning parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "VOCAB_THRESHOLD = 10\n",
    "BUCKETS = [(10,50),(20,100)] #First try buckets you can tweak these\n",
    "EPOCHS = 20\n",
    "BATCH_SIZE = 64\n",
    "RNN_SIZE = 512\n",
    "NUM_LAYERS = 3\n",
    "ENCODING_EMBED_SIZE = 512\n",
    "DECODING_EMBED_SIZE = 512\n",
    "LEARNING_RATE = 0.001\n",
    "LEARNING_RATE_DECAY = 0.9 #nisam siguran da cu ovo koristiti\n",
    "MIN_LEARNING_RATE = 0.0001\n",
    "KEEP_PROBS = 0.5\n",
    "CLIP_RATE = 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'1.4.1'"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tf.__version__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>i</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>me</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>my</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    i\n",
       "0  me\n",
       "1  my"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stopwords=pd.read_csv('english')\n",
    "stopwords[:2]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3) Load Amazon reviews file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "reviews=pd.read_csv(\"Reviews.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(568454, 10)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reviews.shape #returns a 1-D integer tensor representing the shape of input."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>ProductId</th>\n",
       "      <th>UserId</th>\n",
       "      <th>ProfileName</th>\n",
       "      <th>HelpfulnessNumerator</th>\n",
       "      <th>HelpfulnessDenominator</th>\n",
       "      <th>Score</th>\n",
       "      <th>Time</th>\n",
       "      <th>Summary</th>\n",
       "      <th>Text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>B001E4KFG0</td>\n",
       "      <td>A3SGXH7AUHU8GW</td>\n",
       "      <td>delmartian</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1303862400</td>\n",
       "      <td>Good Quality Dog Food</td>\n",
       "      <td>I have bought several of the Vitality canned d...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>B00813GRG4</td>\n",
       "      <td>A1D87F6ZCVE5NK</td>\n",
       "      <td>dll pa</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1346976000</td>\n",
       "      <td>Not as Advertised</td>\n",
       "      <td>Product arrived labeled as Jumbo Salted Peanut...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Id   ProductId          UserId ProfileName  HelpfulnessNumerator  \\\n",
       "0   1  B001E4KFG0  A3SGXH7AUHU8GW  delmartian                     1   \n",
       "1   2  B00813GRG4  A1D87F6ZCVE5NK      dll pa                     0   \n",
       "\n",
       "   HelpfulnessDenominator  Score        Time                Summary  \\\n",
       "0                       1      5  1303862400  Good Quality Dog Food   \n",
       "1                       0      1  1346976000      Not as Advertised   \n",
       "\n",
       "                                                Text  \n",
       "0  I have bought several of the Vitality canned d...  \n",
       "1  Product arrived labeled as Jumbo Salted Peanut...  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reviews.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Id                         0\n",
       "ProductId                  0\n",
       "UserId                     0\n",
       "ProfileName               16\n",
       "HelpfulnessNumerator       0\n",
       "HelpfulnessDenominator     0\n",
       "Score                      0\n",
       "Time                       0\n",
       "Summary                   26\n",
       "Text                       0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check for any nulls values\n",
    "reviews.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Remove null values and unneeded features\n",
    "reviews = reviews.dropna()\n",
    "reviews = reviews.drop(['Id','ProductId','UserId','ProfileName','HelpfulnessNumerator','HelpfulnessDenominator',\n",
    "                        'Score','Time'], 1)\n",
    "reviews = reviews.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Summary</th>\n",
       "      <th>Text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Good Quality Dog Food</td>\n",
       "      <td>I have bought several of the Vitality canned d...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Not as Advertised</td>\n",
       "      <td>Product arrived labeled as Jumbo Salted Peanut...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Summary                                               Text\n",
       "0  Good Quality Dog Food  I have bought several of the Vitality canned d...\n",
       "1      Not as Advertised  Product arrived labeled as Jumbo Salted Peanut..."
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reviews.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Review # 1\n",
      "Good Quality Dog Food\n",
      "I have bought several of the Vitality canned dog food products and have found them all to be of good quality. The product looks more like a stew than a processed meat and it smells better. My Labrador is finicky and she appreciates this product better than  most.\n",
      "\n",
      "Review # 2\n",
      "Not as Advertised\n",
      "Product arrived labeled as Jumbo Salted Peanuts...the peanuts were actually small sized unsalted. Not sure if this was an error or if the vendor intended to represent the product as \"Jumbo\".\n",
      "\n",
      "Review # 3\n",
      "\"Delight\" says it all\n",
      "This is a confection that has been around a few centuries.  It is a light, pillowy citrus gelatin with nuts - in this case Filberts. And it is cut into tiny squares and then liberally coated with powdered sugar.  And it is a tiny mouthful of heaven.  Not too chewy, and very flavorful.  I highly recommend this yummy treat.  If you are familiar with the story of C.S. Lewis' \"The Lion, The Witch, and The Wardrobe\" - this is the treat that seduces Edmund into selling out his Brother and Sisters to the Witch.\n",
      "\n",
      "Review # 4\n",
      "Cough Medicine\n",
      "If you are looking for the secret ingredient in Robitussin I believe I have found it.  I got this in addition to the Root Beer Extract I ordered (which was good) and made some cherry soda.  The flavor is very medicinal.\n",
      "\n",
      "Review # 5\n",
      "Great taffy\n",
      "Great taffy at a great price.  There was a wide assortment of yummy taffy.  Delivery was very quick.  If your a taffy lover, this is a deal.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Inspecting some of the reviews\n",
    "for i in range(5):\n",
    "    print(\"Review #\",i+1)\n",
    "    print(reviews.Summary[i])\n",
    "    print(reviews.Text[i])\n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4) Preparing the Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# A list of contractions from http://stackoverflow.com/questions/19790188/expanding-english-language-contractions-in-python\n",
    "contractions = { \n",
    "\"ain't\": \"am not\",\n",
    "\"aren't\": \"are not\",\n",
    "\"can't\": \"cannot\",\n",
    "\"can't've\": \"cannot have\",\n",
    "\"'cause\": \"because\",\n",
    "\"could've\": \"could have\",\n",
    "\"couldn't\": \"could not\",\n",
    "\"couldn't've\": \"could not have\",\n",
    "\"didn't\": \"did not\",\n",
    "\"doesn't\": \"does not\",\n",
    "\"don't\": \"do not\",\n",
    "\"hadn't\": \"had not\",\n",
    "\"hadn't've\": \"had not have\",\n",
    "\"hasn't\": \"has not\",\n",
    "\"haven't\": \"have not\",\n",
    "\"he'd\": \"he would\",\n",
    "\"he'd've\": \"he would have\",\n",
    "\"he'll\": \"he will\",\n",
    "\"he's\": \"he is\",\n",
    "\"how'd\": \"how did\",\n",
    "\"how'll\": \"how will\",\n",
    "\"how's\": \"how is\",\n",
    "\"i'd\": \"i would\",\n",
    "\"i'll\": \"i will\",\n",
    "\"i'm\": \"i am\",\n",
    "\"i've\": \"i have\",\n",
    "\"isn't\": \"is not\",\n",
    "\"it'd\": \"it would\",\n",
    "\"it'll\": \"it will\",\n",
    "\"it's\": \"it is\",\n",
    "\"let's\": \"let us\",\n",
    "\"ma'am\": \"madam\",\n",
    "\"mayn't\": \"may not\",\n",
    "\"might've\": \"might have\",\n",
    "\"mightn't\": \"might not\",\n",
    "\"must've\": \"must have\",\n",
    "\"mustn't\": \"must not\",\n",
    "\"needn't\": \"need not\",\n",
    "\"oughtn't\": \"ought not\",\n",
    "\"shan't\": \"shall not\",\n",
    "\"sha'n't\": \"shall not\",\n",
    "\"she'd\": \"she would\",\n",
    "\"she'll\": \"she will\",\n",
    "\"she's\": \"she is\",\n",
    "\"should've\": \"should have\",\n",
    "\"shouldn't\": \"should not\",\n",
    "\"that'd\": \"that would\",\n",
    "\"that's\": \"that is\",\n",
    "\"there'd\": \"there had\",\n",
    "\"there's\": \"there is\",\n",
    "\"they'd\": \"they would\",\n",
    "\"they'll\": \"they will\",\n",
    "\"they're\": \"they are\",\n",
    "\"they've\": \"they have\",\n",
    "\"wasn't\": \"was not\",\n",
    "\"we'd\": \"we would\",\n",
    "\"we'll\": \"we will\",\n",
    "\"we're\": \"we are\",\n",
    "\"we've\": \"we have\",\n",
    "\"weren't\": \"were not\",\n",
    "\"what'll\": \"what will\",\n",
    "\"what're\": \"what are\",\n",
    "\"what's\": \"what is\",\n",
    "\"what've\": \"what have\",\n",
    "\"where'd\": \"where did\",\n",
    "\"where's\": \"where is\",\n",
    "\"who'll\": \"who will\",\n",
    "\"who's\": \"who is\",\n",
    "\"won't\": \"will not\",\n",
    "\"wouldn't\": \"would not\",\n",
    "\"you'd\": \"you would\",\n",
    "\"you'll\": \"you will\",\n",
    "\"you're\": \"you are\"\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "def clean_text(text, remove_stopwords = True):\n",
    "    '''Remove unwanted characters, stopwords, and format the text to create fewer nulls word embeddings'''\n",
    "    \n",
    "    # Convert words to lower case\n",
    "    text = text.lower()\n",
    "    \n",
    "    # Replace contractions with their longer forms \n",
    "    if True:\n",
    "        text = text.split()\n",
    "        new_text = []\n",
    "        for word in text:\n",
    "            if word in contractions:\n",
    "                new_text.append(contractions[word])\n",
    "            else:\n",
    "                new_text.append(word)\n",
    "        text = \" \".join(new_text)\n",
    "    \n",
    "    # Format words and remove unwanted characters\n",
    "    text = re.sub(r'https?:\\/\\/.*[\\r\\n]*', '', text, flags=re.MULTILINE)\n",
    "    text = re.sub(r'\\<a href', ' ', text)\n",
    "    text = re.sub(r'&amp;', '', text) \n",
    "    text = re.sub(r'[_\"\\-;%()|+&=*%.,!?:#$@\\[\\]/]', ' ', text)\n",
    "    text = re.sub(r'<br />', ' ', text)\n",
    "    text = re.sub(r'\\'', ' ', text)\n",
    "    return text"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "We will remove the stopwords from the texts because they do not provide much use for training our model. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4.1) clean sumaries and text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Summaries are complete.\n",
      "Texts are complee.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "568412"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Clean the summaries and texts\n",
    "clean_summaries = []\n",
    "for summary in reviews.Summary:\n",
    "    clean_summaries.append(clean_text(summary, remove_stopwords=False))\n",
    "print(\"Summaries are complete.\")\n",
    "len(clean_summaries)\n",
    "clean_texts = []\n",
    "for text in reviews.Text:\n",
    "    clean_texts.append(clean_text(text))\n",
    "print(\"Texts are complee.\")\n",
    "len(clean_texts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "cs =clean_summaries[:500]\n",
    "ct = clean_texts[:500]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "98"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max=0\n",
    "for x in range(len(cs)):\n",
    "    if (len(cs[x])>=max):\n",
    "        max=len(cs[x])\n",
    "        \n",
    "max"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2298"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max=0\n",
    "\n",
    "for x in range(len(ct)):\n",
    "    if (len(ct[x])>=max):\n",
    "        max=len(ct[x])\n",
    "        \n",
    "max"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'i first found steaz berry energy shots at a local organic market  i bought two bottles  which cost just under three dollars each  i fell in love instantly  the drink is delicious    i can taste the yerba mate and the acai juice  like a slightly bitter fruity chocolate honey tea  i am very sensitive to sucralose  splenda  which is in so many energy drinks these days  i also hate the taste  i love that steaz has actual sugar and no artificial sweeteners  the rush it gives me is slow and even  i have several medical conditions  including fibromyalgia  which saps me of energy and causes intense pain  i like how steaz helps clear away the fatigue and fog so i can get things done  no caffeine jitters  even though there are 150 mg of caffeine in each bottle <br  >it was becoming expensive for me to buy the bottles separately at stores  so i started looking online for a bulk price  i am so thrilled to have found the pack of 12 on amazon  i signed up for amazon prime specifically for this product  hah '"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ct[299]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Clean Review # 1\n",
      "good quality dog food\n",
      "i have bought several of the vitality canned dog food products and have found them all to be of good quality  the product looks more like a stew than a processed meat and it smells better  my labrador is finicky and she appreciates this product better than most \n",
      "\n",
      "Clean Review # 2\n",
      "not as advertised\n",
      "product arrived labeled as jumbo salted peanuts   the peanuts were actually small sized unsalted  not sure if this was an error or if the vendor intended to represent the product as  jumbo  \n",
      "\n",
      "Clean Review # 3\n",
      " delight  says it all\n",
      "this is a confection that has been around a few centuries  it is a light  pillowy citrus gelatin with nuts   in this case filberts  and it is cut into tiny squares and then liberally coated with powdered sugar  and it is a tiny mouthful of heaven  not too chewy  and very flavorful  i highly recommend this yummy treat  if you are familiar with the story of c s  lewis   the lion  the witch  and the wardrobe    this is the treat that seduces edmund into selling out his brother and sisters to the witch \n",
      "\n",
      "Clean Review # 4\n",
      "cough medicine\n",
      "if you are looking for the secret ingredient in robitussin i believe i have found it  i got this in addition to the root beer extract i ordered  which was good  and made some cherry soda  the flavor is very medicinal \n",
      "\n",
      "Clean Review # 5\n",
      "great taffy\n",
      "great taffy at a great price  there was a wide assortment of yummy taffy  delivery was very quick  if your a taffy lover  this is a deal \n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Inspect the cleaned summaries and texts to ensure they have been cleaned well\n",
    "for i in range(5):\n",
    "    print(\"Clean Review #\",i+1)\n",
    "    print(cs[i])\n",
    "    print(ct[i])\n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4.3) Building the model"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "The model used is sequence to sequence model "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "def create_vocab(ct,cs):\n",
    "\n",
    "\t'''\n",
    "\t\t\n",
    "\t\tThis function is used to create vocabulary, word_to_id and id_to_word dicts from cleaned data (got from the last question).\n",
    "\n",
    "\t'''\n",
    "\n",
    "\tassert len(ct) == len(cs)\n",
    "\tvocab = []\n",
    "\tfor i in range(len(ct)):\n",
    "\t\twords = ct[i].split()\n",
    "\t\tfor word in words:\n",
    "\t\t\tvocab.append(word)\n",
    "\n",
    "\t\twords = cs[i].split()\n",
    "\t\tfor word in words:\n",
    "\t\t\tvocab.append(word)\n",
    "\n",
    "\n",
    "\tvocab = Counter(vocab)\n",
    "\tnew_vocab = []\n",
    "\tfor key in vocab.keys():\n",
    "\t\tif vocab[key] >= VOCAB_THRESHOLD:\n",
    "\t\t\tnew_vocab.append(key)\n",
    "\n",
    "\tnew_vocab = ['<PAD>', '<GO>', '<UNK>', '<EOS>'] + new_vocab\n",
    "\n",
    "\tword_to_id = {word:i for i, word in enumerate(new_vocab)}\n",
    "\tid_to_word = {i:word for i, word in enumerate(new_vocab)}\n",
    "\n",
    "\treturn new_vocab, word_to_id, id_to_word"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "Back in the old days, traditional phrase-based translation systems performed their task by breaking up source sentences into multiple chunks and then translated them phrase-by-phrase. This led to disfluency in the translation outputs and was not quite like how we, humans, translate. We read the entire source sentence, understand its meaning, and then produce a translation. Neural Machine Translation (NMT) mimics that!.Specifically, an NMT system first reads the source sentence using an encoder to build a \"thought\" vector, a sequence of numbers that represents the sentence meaning; a decoder, then, processes the sentence vector to emit a translation, as illustrated in Figure 1. This is often referred to as the encoder-decoder architecture."
   ]
  },
  {
   "attachments": {
    "encdec1.jpg": {
     "image/jpeg": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![encdec1.jpg](attachment:encdec1.jpg)"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "example of a deep recurrent architecture proposed by for translating a source sentence \"I am a student\" into a target sentence \"Je suis étudiant\". Here, \"<s>\" marks the start of the decoding process while \"</s>\" tells the decoder to stop."
   ]
  },
  {
   "attachments": {
    "seq2seq.jpg": {
     "image/jpeg": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![seq2seq.jpg](attachment:seq2seq.jpg)"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "Embeddings are important for input to machine learning. Classifiers, and neural networks more generally, work on vectors of real numbers. They train best on dense vectors, where all values contribute to define an object. However, many important inputs to machine learning, such as words of text, do not have a natural vector representation. Embedding functions are the standard and effective way to transform such discrete input objects into useful continuous vectors."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "def encoder_data(data, word_to_id, targets=False):\n",
    "\n",
    "\t'''\n",
    "\t\n",
    "\t\tUsing word_to_id dictionery to map each word in the sample to it's own int representation\n",
    "\n",
    "\t'''\n",
    "\tencoded_data = []\n",
    "\n",
    "\tfor i in range(len(data)):\n",
    "\n",
    "\t\tencoded_line = []\n",
    "\t\twords = data[i].split()\n",
    "\t\tfor word in words:\n",
    "\n",
    "\t\t\tif word not in word_to_id.keys():\n",
    "\t\t\t\tencoded_line.append(word_to_id['<UNK>'])\n",
    "\t\t\telse:\n",
    "\t\t\t\tencoded_line.append(word_to_id[word])\n",
    "\n",
    "\t\tif targets:\n",
    "\t\t\tencoded_line.append(word_to_id['<EOS>'])\n",
    "\n",
    "\t\tencoded_data.append(encoded_line)\n",
    "\n",
    "\n",
    "\treturn np.array(encoded_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "def pad_data(data, word_to_id, max_len, target=False):\n",
    "\t'''\n",
    "\t\t\n",
    "\t\tIf the sentence is shorter then wanted length, pad it to that length\n",
    "\n",
    "\t'''\n",
    "\tif target:\n",
    "\t\treturn data + [word_to_id['<PAD>']] * (max_len - len(data))\n",
    "\telse:\n",
    "\t\treturn [word_to_id['<PAD>']] * (max_len - len(data)) + data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "def bucket_data(ct, cs, word_to_id):\n",
    "\n",
    "\t'''\n",
    "\t\n",
    "\t\tIf you prefere bucketing version of the padding, use this function to create buckets of your data.\n",
    "\n",
    "\t'''\n",
    "\tassert len(ct) == len(cs)\n",
    "\n",
    "\tbucketed_data = []\n",
    "\talready_added = []\n",
    "\tfor bucket in BUCKETS:\n",
    "\t\tdata_for_bucket = []\n",
    "\t\tencoder_max = bucket[0]\n",
    "\t\tdecoder_max = bucket[1]\n",
    "\t\tfor i in range(len(ct)):\n",
    "\t\t\tif len(ct[i]) <= encoder_max and len(cs[i]) <= decoder_max:\n",
    "\t\t\t\tif i not in already_added:\n",
    "\t\t\t\t\tdata_for_bucket.append((pad_data(cs[i], word_to_id, encoder_max), pad_data(ct[i], word_to_id, decoder_max, True)))\n",
    "\t\t\t\t\talready_added.append(i)\n",
    "\n",
    "\t\tbucketed_data.append(data_for_bucket)\n",
    "\n",
    "\treturn bucketed_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "def grap_inputs():\n",
    "    '''\n",
    "\t\tThis function is used to define all tensorflow graph placeholders (inputs to the TF graph)\n",
    "\n",
    "\t\tInputs: None\n",
    "\n",
    "\t\tOutputs:\n",
    "\t\t\tinputs - questions in the case of a Chatbot with dimensions of None, None = batch_size, questions_length\n",
    "\t\t\ttargets - answers in the case of a Chatbot with dimensions of None, None = batch_size, answers_length\n",
    "\t\t\tkeep_probs - probabilities used in dropout layer\n",
    "\n",
    "\t\t\tencoder_seq_len -  vector which is used to define lenghts of each sample in the inputs to the model\n",
    "\t\t\tdecoder_seq_len - vector which is used to define lengths of each sample in the targets to the model\n",
    "\t\t\tmax_seq_len - target sample with the most words in it\n",
    "\n",
    "    '''\n",
    "    inputs = tf.placeholder(tf.int32, [None, None], name='inputs')\n",
    "    targets = tf.placeholder(tf.int32, [None, None], name='targets')\n",
    "    keep_probs = tf.placeholder(tf.float32, name='dropout_rate')\n",
    "    \n",
    "    encoder_seq_len = tf.placeholder(tf.int32, (None, ), name='encoder_seq_len')\n",
    "    decoder_seq_len = tf.placeholder(tf.int32, (None, ), name='decoder_seq_len')\n",
    "    max_seq_len = tf.reduce_max(decoder_seq_len, name='max_seq_len')\n",
    "    \n",
    "    return inputs, targets, keep_probs, encoder_seq_len, decoder_seq_len, max_seq_len\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "def encoder(inputs, rnn_size, number_of_layers, encoder_seq_len, keep_probs, encoder_embed_size, encoder_vocab_size):\n",
    "    def cell(units, rate):\n",
    "        layer = tf.contrib.rnn.BasicLSTMCell(units)\n",
    "        return tf.contrib.rnn.DropoutWrapper(layer, rate)\n",
    "\n",
    "    encoder_cell = tf.contrib.rnn.MultiRNNCell([cell(rnn_size, keep_probs) for _ in range(number_of_layers)])\n",
    "    encoder_embedings = tf.contrib.layers.embed_sequence(inputs, encoder_vocab_size, encoder_embed_size) #used to create embeding layer for the encoder\n",
    "    \n",
    "    encoder_outputs, encoder_states = tf.nn.dynamic_rnn(encoder_cell, \n",
    "                                                        encoder_embedings, \n",
    "                                                        encoder_seq_len, \n",
    "                                                        dtype=tf.float32)\n",
    "    \n",
    "    return encoder_outputs, encoder_states\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "def decoder_inputs_preprocessing(targets, word_to_id, batch_size):\n",
    "\n",
    "    endings = tf.strided_slice(targets, [0, 0], [batch_size, -1], [1, 1]) #This line is used to REMOVE last member of each sample in the decoder_inputs batch\n",
    "    return tf.concat([tf.fill([batch_size, 1], word_to_id['<GO>']), endings], 1) #returning line and in this line we concat '<GO>' tag at the beginning of each sample in the batch\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "def decoder(decoder_inputs, enc_states, dec_cell, decoder_embed_size, vocab_size,\n",
    "            dec_seq_len, max_seq_len, word_to_id, batch_size):\n",
    "    \n",
    "    #Defining embedding layer for the Decoder\n",
    "    embed_layer = tf.Variable(tf.random_uniform([vocab_size, decoder_embed_size]))\n",
    "    embedings = tf.nn.embedding_lookup(embed_layer, decoder_inputs) \n",
    "    \n",
    "    #Creating Dense (Fully Connected) layer at the end of the Decoder -  used for generating probabilities for each word in the vocabulary\n",
    "    output_layer = Dense(vocab_size, kernel_initializer=tf.truncated_normal_initializer(0.0, 0.1))\n",
    "    \n",
    "\n",
    "    with tf.variable_scope('decoder'):\n",
    "        #Training helper used only to read inputs in the TRAINING stage\n",
    "        train_helper = tf.contrib.seq2seq.TrainingHelper(embedings, \n",
    "                                                          dec_seq_len)\n",
    "        \n",
    "        #Defining decoder - You can change with BeamSearchDecoder, just beam size\n",
    "        train_decoder = tf.contrib.seq2seq.BasicDecoder(dec_cell, \n",
    "                                                        train_helper, \n",
    "                                                        enc_states, \n",
    "                                                        output_layer)\n",
    "        \n",
    "        #Finishing the training decoder\n",
    "        train_dec_outputs, _, _ = tf.contrib.seq2seq.dynamic_decode(train_decoder, \n",
    "                                                                    impute_finished=True, \n",
    "                                                                    maximum_iterations=max_seq_len)\n",
    "        \n",
    "    with tf.variable_scope('decoder', reuse=True): #we use REUSE option in this scope because we want to get same params learned in the previouse 'decoder' scope\n",
    "        #getting vector of the '<GO>' tags in the int representation\n",
    "        starting_id_vec = tf.tile(tf.constant([word_to_id['<GO>']], dtype=tf.int32), [batch_size], name='starting_id_vec')\n",
    "        \n",
    "        #using basic greedy to get next word in the inference time (based only on probs)\n",
    "        inference_helper = tf.contrib.seq2seq.GreedyEmbeddingHelper(embed_layer, \n",
    "                                                                    starting_id_vec, \n",
    "                                                                    word_to_id['<EOS>'])\n",
    "        \n",
    "        #Defining decoder - for inference time\n",
    "        inference_decoder = tf.contrib.seq2seq.BasicDecoder(dec_cell,\n",
    "                                                            inference_helper, \n",
    "                                                            enc_states, \n",
    "                                                            output_layer)\n",
    "        \n",
    "        \n",
    "        inference_dec_output, _, _ = tf.contrib.seq2seq.dynamic_decode(inference_decoder, \n",
    "                                                                       impute_finished=True, \n",
    "                                                                       maximum_iterations=max_seq_len)\n",
    "        \n",
    "    return train_dec_outputs, inference_dec_output"
   ]
  },
  {
   "attachments": {
    "attention_mechanism.jpg": {
     "image/jpeg": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![attention_mechanism.jpg](attachment:attention_mechanism.jpg)"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "The attention computation happens at every decoder time step. It consists of the following stages:\n",
    "1.The current target hidden state is compared with all source states to derive attention weights.\n",
    "2.Based on the attention weights we compute a context vector as the weighted average of the source states.\n",
    "3.Combine the context vector with the current target hidden state to yield the final attention vector\n",
    "4.The attention vector is fed as an input to the next time step (input feeding). The first three steps can be summarized by the equations below:"
   ]
  },
  {
   "attachments": {
    "attention_equation_0.jpg": {
     "image/jpeg": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![attention_equation_0.jpg](attachment:attention_equation_0.jpg)"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "Here, the function score is used to compared the target hidden state ht with each of the source hidden states h¯s, and the result is normalized to produced attention weights (a distribution over source positions). There are various choices of the scoring function; popular scoring functions include the multiplicative and additive forms given in Eq. (4). Once computed, the attention vector at is used to derive the softmax logit and loss."
   ]
  },
  {
   "attachments": {
    "attention_equation_1.jpg": {
     "image/jpeg": "
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![attention_equation_1.jpg](attachment:attention_equation_1.jpg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "def attention_mech(rnn_size, keep_probs, encoder_outputs, encoder_states, encoder_seq_len, batch_size):\n",
    "\n",
    "    #using internal function to easier create RNN cell\n",
    "    def cell(units, probs):\n",
    "        layer = tf.contrib.rnn.BasicLSTMCell(units)\n",
    "        return tf.contrib.rnn.DropoutWrapper(layer, probs)\n",
    "    \n",
    "    #defining rnn_cell\n",
    "    decoder_cell = cell(rnn_size, keep_probs)\n",
    "    \n",
    "    #using helper function from seq2seq sub_lib for Bahdanau attention\n",
    "    attention_mechanism = tf.contrib.seq2seq.BahdanauAttention(rnn_size, \n",
    "                                                               encoder_outputs, \n",
    "                                                               encoder_seq_len)\n",
    "    \n",
    "    #finishin attention with the attention holder - Attention Wrapper\n",
    "    dec_cell = tf.contrib.seq2seq.AttentionWrapper(decoder_cell, \n",
    "                                                   attention_mechanism, \n",
    "                                                   rnn_size/2)\n",
    "    \n",
    "    #Here we are usingg zero_state of the LSTM (in this case) decoder cell, and feed the value of the last encoder_state to it\n",
    "    attention_zero = dec_cell.zero_state(batch_size=batch_size, dtype=tf.float32)\n",
    "    enc_state_new = attention_zero.clone(cell_state=encoder_states[-1])\n",
    "    \n",
    "    return dec_cell, enc_state_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "def opt_loss(outputs, targets, dec_seq_len, max_seq_len, learning_rate, clip_rate):\n",
    "\n",
    "    logits = tf.identity(outputs.rnn_output)\n",
    "    \n",
    "    mask_weigts = tf.sequence_mask(dec_seq_len, max_seq_len, dtype=tf.float32)\n",
    "    \n",
    "    with tf.variable_scope('opt_loss'):\n",
    "        #using sequence_loss to optimize the seq2seq model\n",
    "        loss = tf.contrib.seq2seq.sequence_loss(logits, \n",
    "                                                targets, \n",
    "                                                mask_weigts)\n",
    "        \n",
    "        #Define optimizer\n",
    "        opt = tf.train.AdamOptimizer(learning_rate)\n",
    "\n",
    "        #Next 3 lines used to clip gradients {Prevent gradient explosion problem}\n",
    "        gradients = tf.gradients(loss, tf.trainable_variables())\n",
    "        clipped_grads, _ = tf.clip_by_global_norm(gradients, clip_rate)\n",
    "        traiend_opt = opt.apply_gradients(zip(clipped_grads, tf.trainable_variables()))\n",
    "        \n",
    "    return loss, traiend_opt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "class Chatbot(object):\n",
    "    \n",
    "    def __init__(self, learning_rate, batch_size, enc_embed_size, dec_embed_size, rnn_size, \n",
    "                 number_of_layers, vocab_size, word_to_id, clip_rate):\n",
    "        \n",
    "        tf.reset_default_graph()\n",
    "        \n",
    "        self.inputs, self.targets, self.keep_probs, self.encoder_seq_len, self.decoder_seq_len, max_seq_len = grap_inputs()\n",
    "        \n",
    "        \n",
    "        enc_outputs, enc_states = encoder(self.inputs, \n",
    "                                          rnn_size,\n",
    "                                          number_of_layers, \n",
    "                                          self.encoder_seq_len, \n",
    "                                          self.keep_probs, \n",
    "                                          enc_embed_size, \n",
    "                                          vocab_size)\n",
    "        \n",
    "        dec_inputs = decoder_inputs_preprocessing(self.targets, \n",
    "                                                  word_to_id, \n",
    "                                                  batch_size)\n",
    "        \n",
    "        \n",
    "        decoder_cell, encoder_states_new = attention_mech(rnn_size, \n",
    "                                                          self.keep_probs, \n",
    "                                                          enc_outputs, \n",
    "                                                          enc_states, \n",
    "                                                          self.encoder_seq_len, \n",
    "                                                          batch_size)\n",
    "        \n",
    "        train_outputs, inference_output = decoder(dec_inputs, \n",
    "                                                  encoder_states_new, \n",
    "                                                  decoder_cell,\n",
    "                                                  dec_embed_size, \n",
    "                                                  vocab_size, \n",
    "                                                  self.decoder_seq_len, \n",
    "                                                  max_seq_len, \n",
    "                                                  word_to_id, \n",
    "                                                  batch_size)\n",
    "        \n",
    "        self.predictions  = tf.identity(inference_output.sample_id, name='preds')\n",
    "        \n",
    "        self.loss, self.opt = opt_loss(train_outputs, \n",
    "                                       self.targets, \n",
    "                                       self.decoder_seq_len, \n",
    "                                       max_seq_len, \n",
    "                                       learning_rate, \n",
    "                                       clip_rate)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_accuracy(target, logits):\n",
    "    \"\"\"\n",
    "    Calculate accuracy\n",
    "    \"\"\"\n",
    "    max_seq = max(target.shape[1], logits.shape[1])\n",
    "    if max_seq - target.shape[1]:\n",
    "        target = np.pad(\n",
    "            target,\n",
    "            [(0,0),(0,max_seq - target.shape[1])],\n",
    "            'constant')\n",
    "    if max_seq - logits.shape[1]:\n",
    "        logits = np.pad(\n",
    "            logits,\n",
    "            [(0,0),(0,max_seq - logits.shape[1])],\n",
    "            'constant')\n",
    "\n",
    "    return np.mean(np.equal(target, logits))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "vocab, word_to_id, id_to_word = create_vocab(cs, ct)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "499"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(vocab)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "encoded_questions = encoder_data(ct, word_to_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "encoded_answers = encoder_data(cs, word_to_id, True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "bucketed_data = bucket_data(encoded_questions, encoded_answers, word_to_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "28\n"
     ]
    }
   ],
   "source": [
    "print(len(bucketed_data[0]))\n",
    "print(len(bucketed_data[1]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "model = Chatbot(LEARNING_RATE, \n",
    "                BATCH_SIZE, \n",
    "                ENCODING_EMBED_SIZE, \n",
    "                DECODING_EMBED_SIZE, \n",
    "                RNN_SIZE, \n",
    "                NUM_LAYERS,\n",
    "                len(vocab), \n",
    "                word_to_id, \n",
    "                CLIP_RATE) #4=clip_rate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "session = tf.Session()\n",
    "session.run(tf.global_variables_initializer())\n",
    "saver = tf.train.Saver(max_to_keep=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 0\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 1\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 2\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 3\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 4\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 5\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 6\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 7\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 8\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 9\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 10\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 11\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 12\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 13\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 14\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 15\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 16\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 17\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 18\n",
      "1\n",
      "1\n",
      "28\n",
      "28\n",
      "Saving model at epoch : 19\n"
     ]
    }
   ],
   "source": [
    "for i in range(EPOCHS):\n",
    "    epoch_accuracy = []\n",
    "    epoch_loss = []\n",
    "    for b in range(len(bucketed_data)):\n",
    "        bucket = bucketed_data[b]\n",
    "        questions_bucket = []\n",
    "        answers_bucket = []\n",
    "        bucket_accuracy = []\n",
    "        bucket_loss = []\n",
    "        for k in range(len(bucket)):\n",
    "            questions_bucket.append(np.array(bucket[k][0]))\n",
    "            answers_bucket.append(np.array(bucket[k][1]))\n",
    "        print(len(questions_bucket))\n",
    "        print(len(answers_bucket))\n",
    "        for ii in range(len(questions_bucket) //  BATCH_SIZE):\n",
    "            \n",
    "            starting_id = ii * BATCH_SIZE\n",
    "            \n",
    "            X_batch = questions_bucket[starting_id:starting_id+BATCH_SIZE]\n",
    "            y_batch = answers_bucket[starting_id:starting_id+BATCH_SIZE]\n",
    "            print(np.array(X_batch).shape)\n",
    "            print(np.array(y_batch).shape)\n",
    "            feed_dict = {model.inputs:X_batch, \n",
    "                         model.targets:y_batch, \n",
    "                         model.keep_probs:KEEP_PROBS, \n",
    "                         model.decoder_seq_len:[len(y_batch[0])]*BATCH_SIZE,\n",
    "                         model.encoder_seq_len:[len(X_batch[0])]*BATCH_SIZE}\n",
    "            \n",
    "            cost, _, preds = session.run([model.loss, model.opt, model.predictions], feed_dict=feed_dict)\n",
    "            \n",
    "            #epoch_accuracy.append(get_accuracy(np.array(y_batch), np.array(preds)))\n",
    "            #bucket_accuracy.append(get_accuracy(np.array(y_batch), np.array(preds)))\n",
    "            \n",
    "            bucket_loss.append(cost)\n",
    "            epoch_loss.append(cost)\n",
    "            \n",
    "        #print(\"Bucket {}:\".format(b+1), \n",
    "       #       \" | Loss: {}\".format(np.mean(bucket_loss)), \n",
    "         #     \" | Accuracy: {}\".format(np.mean(bucket_accuracy)))\n",
    "        \n",
    "    #print(\"EPOCH: {}/{}\".format(i, EPOCHS), \n",
    "    #      \" | Epoch loss: {}\".format(np.mean(epoch_loss)), \n",
    "     #     \" | Epoch accuracy: {}\".format(np.mean(epoch_accuracy)))\n",
    "    print(\"Saving model at epoch : \" + str(i))\n",
    "    saver.save(session, \"./sumarization/chatbot_{}.ckpt\".format(i))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 5) Giving user text as imput to generate summaries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "def convert_string2int(data, word2int):\n",
    "    question, x = [], []\n",
    "    question.append(data)\n",
    "    x.append(clean_text(question[0]))\n",
    "    x = encoder_data(x, word_to_id)\n",
    "    return x[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "tf.reset_default_graph()\n",
    "import_meta = tf.train.import_meta_graph('./sumarization/chatbot_19.ckpt.meta')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "INFO:tensorflow:Restoring parameters from ./sumarization/chatbot_19.ckpt\n"
     ]
    }
   ],
   "source": [
    "sumarization_session = tf.Session()\n",
    "import_meta.restore(sumarization_session, tf.train.latest_checkpoint('./sumarization/'))\n",
    "All_varaibles = tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES)\n",
    "graph = tf.get_default_graph()\n",
    "inputs = graph.get_tensor_by_name(\"inputs:0\")\n",
    "keep_probs = graph.get_tensor_by_name(\"dropout_rate:0\")\n",
    "encoder_seq_len = graph.get_tensor_by_name(\"encoder_seq_len:0\")\n",
    "decoder_seq_len = graph.get_tensor_by_name(\"decoder_seq_len:0\")\n",
    "preds = graph.get_tensor_by_name(\"preds:0\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sumary():\n",
    "    users_input = raw_input(\"You: \")\n",
    "    users_inpur = users_input.lower()\n",
    "    que = convert_string2int(users_input, word_to_id)\n",
    "    bucket_lengths = [50,100]\n",
    "    length = [x for x in bucket_lengths if len(que) <= x]   \n",
    "    x = [word_to_id['<PAD>']] * (length[0] - len(que))\n",
    "    x = np.array(x)\n",
    "    que = np.append(x, que)\n",
    "    fake_batch = np.zeros((BATCH_SIZE, length[0]))\n",
    "    fake_batch[0] = que\n",
    "    feed2_dict = {inputs:fake_batch,  \n",
    "                         keep_probs:1.0, \n",
    "                         decoder_seq_len:[length[0]]*BATCH_SIZE,\n",
    "                         encoder_seq_len:[length[0]]*BATCH_SIZE}\n",
    "    ans = sumarization_session.run(preds, feed2_dict)[0]\n",
    "    def clean_ans(text):\n",
    "                ans = [id_to_word[i] for i in text]\n",
    "                if(ans[0] == '<UNK>' or ans[0] == '<EOS>'):\n",
    "                    return \"i do not know\"\n",
    "                ans_2 = []\n",
    "                for i in range(len(ans)):\n",
    "                    if(ans[i] == '<UNK>' or ans[i] == '<EOS>'):\n",
    "                        break\n",
    "                    else:\n",
    "                        ans_2.append(ans[i])\n",
    "                        str1 = ' '.join(str(e) for e in ans_2)\n",
    "                return str1\n",
    "    print(\"summary: \" + str(clean_ans(ans)))   \n",
    "    return 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "You: i have bought several of the vitality canned dog food products and have found them all to be of good quality  the product looks more like a stew than a processed meat and it smells better  my labrador is finicky and she appreciates this product better than most \n",
      "summary: put put put bit nothing nothing nothing family family bit nothing family bit bit lot bit lot bit size bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sumary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
